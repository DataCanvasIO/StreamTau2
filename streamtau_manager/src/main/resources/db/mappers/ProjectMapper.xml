<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright 2020 Zetyun
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zetyun.streamtau.manager.db.mapper.ProjectMapper">

    <select id="findAll" resultType="Project">
        select * from project
    </select>

    <select id="findById" parameterType="long" resultType="Project">
        select * from project
        <where>
            project_id = #{projectId}
        </where>
    </select>

    <insert id="insert" parameterType="Project" useGeneratedKeys="true" keyProperty="projectId">
        insert into project(
        <trim suffixOverrides=",">
            project_name,
            <if test="model.projectDescription != null">project_description,</if>
            project_type
        </trim>
        ) values (
        <trim suffixOverrides=",">
            #{model.projectName},
            <if test="model.projectDescription != null">#{model.projectDescription},</if>
            #{model.projectType}
        </trim>
        )
    </insert>

    <update id="update" parameterType="Project">
        update project
        <set>
            <if test="model.projectName != null">project_name = #{model.projectName},</if>
            <if test="model.projectDescription != null">project_description = #{model.projectDescription}</if>
        </set>
        <where>
            project_id = #{model.projectId}
        </where>
    </update>

    <delete id="delete" parameterType="long">
        delete from project
        <where>
            project_id = #{projectId}
        </where>
    </delete>

    <select id="findAllForUser" parameterType="String" resultType="Project">
        select p.*, t.user_project_id from project p left join user_project t on p.project_id = t.project_id
        <where>
            t.user_id = #{userId}
        </where>
    </select>

    <select id="findByIdForUser" parameterType="map" resultType="Project">
        select p.*, t.user_project_id from project p left join user_project t on p.project_id = t.project_id
        <where>
            t.user_project_id = #{userProjectId}
            and t.user_id = #{userId}
        </where>
    </select>

    <update id="updateForUser" parameterType="map">
        update project
        <set>
            <if test="model.projectName != null">project_name = #{model.projectName},</if>
            <if test="model.projectDescription != null">project_description = #{model.projectDescription}</if>
        </set>
        <where>
            exists(
            select * from user_project t
            <where>
                t.project_id = project.project_id
                and t.user_project_id = #{model.userProjectId}
                and t.user_id = #{userId}
            </where>
            )
        </where>
    </update>

</mapper>
